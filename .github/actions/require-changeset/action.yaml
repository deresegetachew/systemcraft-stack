name: Require Changeset
description: "Fail PRs to main without a changeset (skip for release PRs)"
inputs:
  skip-label:
    description: "Label text to skip changeset check (can appear in PR title, body, or labels)"
    required: false
    default: "[skip changeset check]"
runs:
  using: composite
  steps:
    - name: Check for changeset in PR
      shell: bash
      env:
        PR_TITLE: ${{ github.event.pull_request.title || '' }}
        PR_BODY: ${{ github.event.pull_request.body  || '' }}
        ACTOR: ${{ github.actor }}
        EVENT_TYPE: ${{ github.event_name }}
        BASE_REF: ${{ github.base_ref || 'main' }}
        HEAD_REF: ${{ github.head_ref || '' }}
        BASE_SHA: ${{ github.event.pull_request.base.sha || '' }}
        HEAD_SHA: ${{ github.event.pull_request.head.sha || '' }}
      run: |
        set -euo pipefail

        echo "Event type: $EVENT_TYPE"
        echo "PR title: $PR_TITLE"
        echo "Actor: $ACTOR"

        # Skip if not a pull request
        if [[ "$EVENT_TYPE" != "pull_request" ]]; then
          echo "‚ÑπÔ∏è Not a pull request, skipping changeset check."
          exit 0
        fi

        # Skip guard for release PRs created by Changesets
        if [[ "$PR_TITLE" == "Version Packages"* ]] || [[ "$ACTOR" == "github-actions[bot]" ]]; then
          echo "‚ÑπÔ∏è Release PR detected, skipping changeset check."
          exit 0
        fi

        if [[ "$ACTOR" == "dependabot[bot]" ]] || [[ "$HEAD_REF" == dependabot/* ]]; then
          echo "‚ÑπÔ∏è Dependabot PR detected, skipping changeset check."
          exit 0
        fi

        # TODO: skip dependbot here

        # Skip guard for PRs with skip changeset check label (title, body, or labels)
        SKIP_LABEL="${{ inputs.skip-label }}"
        LABEL_FOUND=false
        
        # Check if the skip label exists in PR labels using GitHub context
        if [[ "${{ contains(github.event.pull_request.labels.*.name, inputs.skip-label) }}" == "true" ]]; then
          LABEL_FOUND=true
        fi
        
        if [[ "$PR_TITLE" == *"$SKIP_LABEL"* ]] || [[ "$PR_BODY" == *"$SKIP_LABEL"* ]] || [[ "$LABEL_FOUND" == "true" ]]; then
          echo "‚ÑπÔ∏è Skip label detected in PR title, body or labels, skipping changeset check."
          exit 0
        fi

        echo "üîÑ Fetching branches..."
        git fetch origin "$BASE_REF"
        if [[ -n "$HEAD_REF" ]]; then git fetch origin "$HEAD_REF"; fi

        echo "üîç Setting up git references for PR context..."
        echo "Head ref: $HEAD_REF"
        echo "Base ref: $BASE_REF"

        echo "Comparing $BASE_SHA (base) to $HEAD_SHA (head)"

        echo ""
        echo "üîç Checking for changesets in this PR..."
        echo "Changed files in this PR:"

        if ! CHANGED_FILES=$(git diff --name-only "$BASE_SHA...$HEAD_SHA" 2>&1); then
          echo "‚ùå ERROR: Could not get changed files"
          echo "Git diff output: $CHANGED_FILES"
          exit 1
        fi

        echo "$CHANGED_FILES"

        CHANGESET_FILES=$(echo "$CHANGED_FILES" | grep -E '^\.changeset/.*\.md$' || true)

        if [[ -z "$CHANGESET_FILES" ]]; then
          echo ""
          echo "‚ùå ERROR: No changeset found for this PR!"
          echo ""
          echo "üìù This PR modifies code but doesn't include a changeset."
          echo "   Changesets are required to track version bumps and generate changelogs."
          echo ""
          echo "üîß To fix this:"
          echo "   1. Run: pnpm changeset"
          echo "   2. Follow the prompts to describe your changes"
          echo "   3. Commit the generated .changeset/*.md file"
          echo ""
          echo "üí° Learn more: https://github.com/changesets/changesets"
          echo ""
          exit 1
        fi

        echo ""
        echo "‚úÖ Changeset found:"
        echo "$CHANGESET_FILES"
